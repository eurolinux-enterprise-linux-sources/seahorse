<refentry id="libseahorse-SeahorseSecureEntry">
<refmeta>
<refentrytitle role="top_of_page" id="libseahorse-SeahorseSecureEntry.top_of_page">SeahorseSecureEntry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSEAHORSE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>SeahorseSecureEntry</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libseahorse-SeahorseSecureEntry.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link>;
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="seahorse-secure-entry-new">seahorse_secure_entry_new</link>           (void);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-reset-changed">seahorse_secure_entry_reset_changed</link> (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="gboolean">gboolean</link>            <link linkend="seahorse-secure-entry-get-changed">seahorse_secure_entry_get_changed</link>   (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-visibility">seahorse_secure_entry_set_visibility</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gboolean">gboolean</link> setting);
<link linkend="gboolean">gboolean</link>            <link linkend="seahorse-secure-entry-get-visibility">seahorse_secure_entry_get_visibility</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-invisible-char">seahorse_secure_entry_set_invisible_char</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gunichar">gunichar</link> ch);
<link linkend="gunichar">gunichar</link>            <link linkend="seahorse-secure-entry-get-invisible-char">seahorse_secure_entry_get_invisible_char</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-has-frame">seahorse_secure_entry_set_has_frame</link> (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gboolean">gboolean</link> setting);
<link linkend="gboolean">gboolean</link>            <link linkend="seahorse-secure-entry-get-has-frame">seahorse_secure_entry_get_has_frame</link> (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-max-length">seahorse_secure_entry_set_max_length</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gint">gint</link> max);
<link linkend="gint">gint</link>                <link linkend="seahorse-secure-entry-get-max-length">seahorse_secure_entry_get_max_length</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-activates-default">seahorse_secure_entry_set_activates_default</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gboolean">gboolean</link> setting);
<link linkend="gboolean">gboolean</link>            <link linkend="seahorse-secure-entry-get-activates-default">seahorse_secure_entry_get_activates_default</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-width-chars">seahorse_secure_entry_set_width_chars</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gint">gint</link> n_chars);
<link linkend="gint">gint</link>                <link linkend="seahorse-secure-entry-get-width-chars">seahorse_secure_entry_get_width_chars</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-set-text">seahorse_secure_entry_set_text</link>      (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         const <link linkend="gchar">gchar</link> *text);
const <link linkend="gchar">gchar</link>*        <link linkend="seahorse-secure-entry-get-text">seahorse_secure_entry_get_text</link>      (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="PangoLayout">PangoLayout</link>*        <link linkend="seahorse-secure-entry-get-layout">seahorse_secure_entry_get_layout</link>    (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);
<link linkend="void">void</link>                <link linkend="seahorse-secure-entry-get-layout-offsets">seahorse_secure_entry_get_layout_offsets</link>
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gint">gint</link> *x,
                                                         <link linkend="gint">gint</link> *y);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libseahorse-SeahorseSecureEntry.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libseahorse-SeahorseSecureEntry.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SeahorseSecureEntry" role="struct">
<title>SeahorseSecureEntry</title>
<indexterm zone="SeahorseSecureEntry"><primary sortas="SecureEntry">SeahorseSecureEntry</primary></indexterm><programlisting>typedef struct {
    GtkWidget widget;

    gchar *text;

    guint overwrite_mode : 1;

    /* length in use, in chars */
    guint16 text_length; 
    guint16 text_max_length;
} SeahorseSecureEntry;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="seahorse-secure-entry-new" role="function">
<title>seahorse_secure_entry_new ()</title>
<indexterm zone="seahorse-secure-entry-new"><primary sortas="secure_entry_new">seahorse_secure_entry_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          seahorse_secure_entry_new           (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-reset-changed" role="function">
<title>seahorse_secure_entry_reset_changed ()</title>
<indexterm zone="seahorse-secure-entry-reset-changed"><primary sortas="secure_entry_reset_changed">seahorse_secure_entry_reset_changed</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_reset_changed (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-changed" role="function">
<title>seahorse_secure_entry_get_changed ()</title>
<indexterm zone="seahorse-secure-entry-get-changed"><primary sortas="secure_entry_get_changed">seahorse_secure_entry_get_changed</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            seahorse_secure_entry_get_changed   (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-visibility" role="function">
<title>seahorse_secure_entry_set_visibility ()</title>
<indexterm zone="seahorse-secure-entry-set-visibility"><primary sortas="secure_entry_set_visibility">seahorse_secure_entry_set_visibility</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_visibility
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-visibility" role="function">
<title>seahorse_secure_entry_get_visibility ()</title>
<indexterm zone="seahorse-secure-entry-get-visibility"><primary sortas="secure_entry_get_visibility">seahorse_secure_entry_get_visibility</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            seahorse_secure_entry_get_visibility
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-invisible-char" role="function">
<title>seahorse_secure_entry_set_invisible_char ()</title>
<indexterm zone="seahorse-secure-entry-set-invisible-char"><primary sortas="secure_entry_set_invisible_char">seahorse_secure_entry_set_invisible_char</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_invisible_char
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gunichar">gunichar</link> ch);</programlisting>
<para>
Sets the character to use in place of the actual text when
<link linkend="seahorse-secure-entry-set-visibility"><function>seahorse_secure_entry_set_visibility()</function></link> has been called to set text 
to <link linkend="FALSE--CAPS"><literal>FALSE</literal></link>. i.e. this is the character used in "password mode" to
show the user how many characters have been typed. The default
invisible char is an asterisk ('*').  If you set the invisible char
to 0, then the user will get no feedback at all; there will be
no text on the screen as they type.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ch</parameter>&#160;:</term>
<listitem><simpara> a Unicode character
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-invisible-char" role="function">
<title>seahorse_secure_entry_get_invisible_char ()</title>
<indexterm zone="seahorse-secure-entry-get-invisible-char"><primary sortas="secure_entry_get_invisible_char">seahorse_secure_entry_get_invisible_char</primary></indexterm><programlisting><link linkend="gunichar">gunichar</link>            seahorse_secure_entry_get_invisible_char
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Retrieves the character displayed in place of the real characters
for entries with visisbility set to false. See <link linkend="seahorse-secure-entry-set-invisible-char"><function>seahorse_secure_entry_set_invisible_char()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the current invisible char, or 0, if the entry does not
              show invisible text at all. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-has-frame" role="function">
<title>seahorse_secure_entry_set_has_frame ()</title>
<indexterm zone="seahorse-secure-entry-set-has-frame"><primary sortas="secure_entry_set_has_frame">seahorse_secure_entry_set_has_frame</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_has_frame (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
Sets whether the entry has a beveled frame around it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> new value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-has-frame" role="function">
<title>seahorse_secure_entry_get_has_frame ()</title>
<indexterm zone="seahorse-secure-entry-get-has-frame"><primary sortas="secure_entry_get_has_frame">seahorse_secure_entry_get_has_frame</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            seahorse_secure_entry_get_has_frame (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Gets the value set by <link linkend="seahorse-secure-entry-set-has-frame"><function>seahorse_secure_entry_set_has_frame()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> whether the entry has a beveled frame
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-max-length" role="function">
<title>seahorse_secure_entry_set_max_length ()</title>
<indexterm zone="seahorse-secure-entry-set-max-length"><primary sortas="secure_entry_set_max_length">seahorse_secure_entry_set_max_length</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_max_length
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gint">gint</link> max);</programlisting>
<para>
Sets the maximum allowed length of the contents of the widget. If
the current contents are longer than the given length, then they
will be truncated to fit.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max</parameter>&#160;:</term>
<listitem><simpara> the maximum length of the entry, or 0 for no maximum.
  (other than the maximum length of entries.) The value passed in will
  be clamped to the range 0-65536.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-max-length" role="function">
<title>seahorse_secure_entry_get_max_length ()</title>
<indexterm zone="seahorse-secure-entry-get-max-length"><primary sortas="secure_entry_get_max_length">seahorse_secure_entry_get_max_length</primary></indexterm><programlisting><link linkend="gint">gint</link>                seahorse_secure_entry_get_max_length
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Retrieves the maximum allowed length of the text in
<parameter>entry</parameter>. See <link linkend="seahorse-secure-entry-set-max-length"><function>seahorse_secure_entry_set_max_length()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the maximum allowed number of characters
              in <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>, or 0 if there is no maximum.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-activates-default" role="function">
<title>seahorse_secure_entry_set_activates_default ()</title>
<indexterm zone="seahorse-secure-entry-set-activates-default"><primary sortas="secure_entry_set_activates_default">seahorse_secure_entry_set_activates_default</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_activates_default
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
If <parameter>setting</parameter> is <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, pressing Enter in the <parameter>entry</parameter> will activate the default
widget for the window containing the entry. This usually means that
the dialog box containing the entry will be closed, since the default
widget is usually one of the dialog buttons.
</para>
<para>
(For experts: if <parameter>setting</parameter> is <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, the entry calls
<link linkend="gtk-window-activate-default"><function>gtk_window_activate_default()</function></link> on the window containing the entry, in
the default handler for the "activate" signal.)</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> to activate window's default widget on Enter keypress
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-activates-default" role="function">
<title>seahorse_secure_entry_get_activates_default ()</title>
<indexterm zone="seahorse-secure-entry-get-activates-default"><primary sortas="secure_entry_get_activates_default">seahorse_secure_entry_get_activates_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            seahorse_secure_entry_get_activates_default
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Retrieves the value set by <link linkend="seahorse-secure-entry-set-activates-default"><function>seahorse_secure_entry_set_activates_default()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the entry will activate the default widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-width-chars" role="function">
<title>seahorse_secure_entry_set_width_chars ()</title>
<indexterm zone="seahorse-secure-entry-set-width-chars"><primary sortas="secure_entry_set_width_chars">seahorse_secure_entry_set_width_chars</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_width_chars
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gint">gint</link> n_chars);</programlisting>
<para>
Changes the size request of the entry to be about the right size
for <parameter>n_chars</parameter> characters. Note that it changes the size
<emphasis>request</emphasis>, the size can still be affected by
how you pack the widget into containers. If <parameter>n_chars</parameter> is -1, the
size reverts to the default entry size.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_chars</parameter>&#160;:</term>
<listitem><simpara> width in chars
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-width-chars" role="function">
<title>seahorse_secure_entry_get_width_chars ()</title>
<indexterm zone="seahorse-secure-entry-get-width-chars"><primary sortas="secure_entry_get_width_chars">seahorse_secure_entry_get_width_chars</primary></indexterm><programlisting><link linkend="gint">gint</link>                seahorse_secure_entry_get_width_chars
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Gets the value set by <link linkend="seahorse-secure-entry-set-width-chars"><function>seahorse_secure_entry_set_width_chars()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> number of chars to request space for, or negative if unset
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-set-text" role="function">
<title>seahorse_secure_entry_set_text ()</title>
<indexterm zone="seahorse-secure-entry-set-text"><primary sortas="secure_entry_set_text">seahorse_secure_entry_set_text</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_set_text      (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-text" role="function">
<title>seahorse_secure_entry_get_text ()</title>
<indexterm zone="seahorse-secure-entry-get-text"><primary sortas="secure_entry_get_text">seahorse_secure_entry_get_text</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        seahorse_secure_entry_get_text      (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Retrieves the contents of the entry widget.
See also <link linkend="gtk-editable-get-chars"><function>gtk_editable_get_chars()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a pointer to the contents of the widget as a
     string.  This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-layout" role="function">
<title>seahorse_secure_entry_get_layout ()</title>
<indexterm zone="seahorse-secure-entry-get-layout"><primary sortas="secure_entry_get_layout">seahorse_secure_entry_get_layout</primary></indexterm><programlisting><link linkend="PangoLayout">PangoLayout</link>*        seahorse_secure_entry_get_layout    (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry);</programlisting>
<para>
Gets the <link linkend="PangoLayout"><type>PangoLayout</type></link> used to display the entry.
The layout is useful to e.g. convert text positions to
pixel positions, in combination with <link linkend="seahorse-secure-entry-get-layout-offsets"><function>seahorse_secure_entry_get_layout_offsets()</function></link>.
The returned layout is owned by the entry so need not be
freed by the caller.
</para>
<para>
Keep in mind that the layout text may contain a preedit string, so
<link linkend="seahorse-secure-entry-layout-index-to-text-index"><function>seahorse_secure_entry_layout_index_to_text_index()</function></link> and
<link linkend="seahorse-secure-entry-text-index-to-layout-index"><function>seahorse_secure_entry_text_index_to_layout_index()</function></link> are needed to convert byte
indices in the layout to byte indices in the entry contents.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the <link linkend="PangoLayout"><type>PangoLayout</type></link> for this entry
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-entry-get-layout-offsets" role="function">
<title>seahorse_secure_entry_get_layout_offsets ()</title>
<indexterm zone="seahorse-secure-entry-get-layout-offsets"><primary sortas="secure_entry_get_layout_offsets">seahorse_secure_entry_get_layout_offsets</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_entry_get_layout_offsets
                                                        (<link linkend="SeahorseSecureEntry">SeahorseSecureEntry</link> *entry,
                                                         <link linkend="gint">gint</link> *x,
                                                         <link linkend="gint">gint</link> *y);</programlisting>
<para>
Obtains the position of the <link linkend="PangoLayout"><type>PangoLayout</type></link> used to render text
in the entry, in widget coordinates. Useful if you want to line
up the text in an entry with some other text, e.g. when using the
entry to implement editable cells in a sheet widget.
</para>
<para>
Also useful to convert mouse events into coordinates inside the
<link linkend="PangoLayout"><type>PangoLayout</type></link>, e.g. to take some action if some part of the entry text
is clicked.
</para>
<para>
Note that as the user scrolls around in the entry the offsets will
change; you'll need to connect to the "notify::scroll_offset"
signal to track this. Remember when using the <link linkend="PangoLayout"><type>PangoLayout</type></link>
functions you need to convert to and from pixels using
<link linkend="PANGO-PIXELS--CAPS"><function>PANGO_PIXELS()</function></link> or <link linkend="PANGO-SCALE--CAPS"><type>PANGO_SCALE</type></link>.
</para>
<para>
Keep in mind that the layout text may contain a preedit string, so
<link linkend="seahorse-secure-entry-layout-index-to-text-index"><function>seahorse_secure_entry_layout_index_to_text_index()</function></link> and
<link linkend="seahorse-secure-entry-text-index-to-layout-index"><function>seahorse_secure_entry_text_index_to_layout_index()</function></link> are needed to convert byte
indices in the layout to byte indices in the entry contents.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="SeahorseSecureEntry"><type>SeahorseSecureEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&#160;:</term>
<listitem><simpara> location to store X offset of layout, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&#160;:</term>
<listitem><simpara> location to store Y offset of layout, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
