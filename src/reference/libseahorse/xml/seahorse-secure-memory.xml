<refentry id="libseahorse-seahorse-secure-memory">
<refmeta>
<refentrytitle role="top_of_page" id="libseahorse-seahorse-secure-memory.top_of_page">seahorse-secure-memory</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSEAHORSE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>seahorse-secure-memory</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libseahorse-seahorse-secure-memory.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
extern              gboolean <link linkend="seahorse-use-secure-mem">seahorse_use_secure_mem</link>;
#define             <link linkend="WITH-SECURE-MEM--CAPS">WITH_SECURE_MEM</link>                     (EXP)
<link linkend="void">void</link>                <link linkend="seahorse-secure-memory-init">seahorse_secure_memory_init</link>         (void);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libseahorse-seahorse-secure-memory.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libseahorse-seahorse-secure-memory.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="seahorse-use-secure-mem" role="variable">
<title>seahorse_use_secure_mem</title>
<indexterm zone="seahorse-use-secure-mem"><primary sortas="use_secure_mem">seahorse_use_secure_mem</primary></indexterm><programlisting>extern gboolean seahorse_use_secure_mem;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="WITH-SECURE-MEM--CAPS" role="macro">
<title>WITH_SECURE_MEM()</title>
<indexterm zone="WITH-SECURE-MEM--CAPS"><primary>WITH_SECURE_MEM</primary></indexterm><programlisting>#define             WITH_SECURE_MEM(EXP)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>EXP</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="seahorse-secure-memory-init" role="function">
<title>seahorse_secure_memory_init ()</title>
<indexterm zone="seahorse-secure-memory-init"><primary sortas="secure_memory_init">seahorse_secure_memory_init</primary></indexterm><programlisting><link linkend="void">void</link>                seahorse_secure_memory_init         (void);</programlisting>
<para>
Configures non-pageable (secure) memory. Must be called before the first
memory allocation.
</para>
<para>
This function sets the <link linkend="GMemVTable"><type>GMemVTable</type></link> to use the switch* function implemented in
this files</para>
<para>
</para></refsect2>

</refsect1>




</refentry>
